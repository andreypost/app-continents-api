{"version":3,"sources":["webpack://app-continents-api/./src/components/List.tsx","webpack://app-continents-api/./src/components/Countries.tsx","webpack://app-continents-api/./src/views/Main.tsx"],"names":["data","children","clase","useState","firstlistState","setfirstListState","useContext","ListContext","setListState","listState","className","onClick","state","style","display","e","target","closest","querySelector","handleCloseTree","Div","styled","GET_COUNTRIES","gql","useQuery","loading","error","Spiner","color","continents","length","map","continent","name","countries","country","languages","language"],"mappings":"mPAmCA,QA1B8B,SAAC,GAAqC,IAAnCA,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,MAC/C,GAA4CC,cAAS,QAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAoCC,gBAAWC,KAA5BC,GAAnB,EAAQC,UAAR,EAAmBD,cASnB,OACE,eAAIE,UAAWR,EAAf,SACGD,GACC,2BACE,iBAAMU,QAAS,kBAAMN,GAAkB,SAAAO,GAAK,MAAc,SAAVA,EAAmB,QAAU,WAA7E,SAAuFZ,KACvF,eAAIa,MAAO,CAAEC,QAASV,GAAtB,SAAyCH,QAG3C,yBACE,iBAAMU,QAAS,SAAAI,GAAC,OAhBA,SAACA,GAIvBA,EAAEC,OAAOC,QAAQ,SAASC,cAAc,MAAML,MAAMC,QAAU,OAC9DN,EAAa,QAWaW,CAAgBJ,IAApC,SAAyCf,S,QCvB7CoB,EAAMC,SAAH,s0BAiEHC,GAAgBC,QAAH,kLAmCnB,QAtB4B,WAC1B,OAAiCC,cAAyBF,GAAlDtB,EAAR,EAAQA,KAAMyB,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,MAEvB,OAAID,GAAgB,SAACE,EAAA,EAAD,IAChBD,GAAc,cAAGb,MAAO,CAAEe,MAAO,OAAnB,oFAGhB,SAACR,EAAD,UACGpB,GAAQA,EAAK6B,WAAWC,OAAS,GAAK9B,EAAK6B,WAAWE,KAAI,SAACC,GAAD,OACzD,SAAC,EAAD,CAA2BhC,KAAMgC,EAAUC,KAAM/B,MAAO,OAAxD,SACG8B,EAAUE,UAAUH,KAAI,SAAAI,GAAO,OAC9B,SAAC,EAAD,CAAyBnC,KAAMmC,EAAQF,KAAM/B,MAAO,YAApD,SACGiC,EAAQC,UAAUL,KAAI,SAACM,GAAD,OACrB,SAAC,EAAD,CAA0BrC,KAAMqC,EAASJ,KAAM/B,MAAO,cAA3CmC,EAASJ,UAFbE,EAAQF,UAFZD,EAAUC,YClF7B,EAPuB,WACrB,OACE,iBAAMvB,UAAU,UAAhB,UACE,SAAC,EAAD","file":"137.bundle.js","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport { ListContext } from '../App'\r\n\r\ninterface Props {\r\n  data: any\r\n  children?: any\r\n  clase: any\r\n}\r\n\r\nconst List: React.FC<Props> = ({ data, children, clase }: Props) => {\r\n  const [firstlistState, setfirstListState] = useState('none')\r\n  const { listState, setListState } = useContext(ListContext)\r\n\r\n  const handleCloseTree = (e: { target: any }) => {\r\n    // for (const ul of e.target.closest('.tree').querySelectorAll('ul:not(.firstList, .secondList)')) {\r\n    //   ul.style.display = 'none'\r\n    // }\r\n    e.target.closest('.tree').querySelector('ul').style.display = 'none'\r\n    setListState('none')\r\n  }\r\n  return (\r\n    <ul className={clase}>\r\n      {children ?\r\n        <li>\r\n          <span onClick={() => setfirstListState(state => state === 'none' ? 'block' : 'none')}>{data}</span>\r\n          <ul style={{ display: firstlistState }}>{children}</ul>\r\n        </li>\r\n        :\r\n        <li>\r\n          <span onClick={e => handleCloseTree(e)}>{data}</span>\r\n        </li>\r\n      }\r\n    </ul>\r\n  )\r\n}\r\nexport default List","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useQuery, gql } from '@apollo/client'\r\nimport Spiner from 'Spiner'\r\nimport List from './List'\r\n\r\nconst Div = styled.div`\r\n  ul {\r\n    position: relative;\r\n  }\r\n\r\n  .tree:before,\r\n  .firstList:before,\r\n  .secondList:before {\r\n    content: '';\r\n    height: 100%;\r\n    position: absolute;\r\n    left: 65px;\r\n    bottom: -10px;\r\n    border-left: 1px dashed black;\r\n    z-index: -9;\r\n  }\r\n\r\n  .firstList:before,\r\n  .secondList:before {\r\n    height: unset;\r\n    width: 50%;\r\n    left: -15px;\r\n    top: 12px;\r\n    border-left: none;\r\n    border-top: 1px dashed black;\r\n  }\r\n\r\n  .secondList:before {\r\n    left: -95px;\r\n  }\r\n\r\n  li {\r\n    margin: 10px auto;\r\n  }\r\n\r\n  li span {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    font-weight: 500;\r\n    border: 1px solid black;\r\n    border-radius: 5px;\r\n    background-color: white;\r\n    padding: 2px 10px;\r\n  }\r\n\r\n  @media (min-width: 992px) {\r\n    li span {\r\n      cursor: pointer;\r\n    }\r\n}`\r\n\r\ninterface Continents {\r\n  name: string\r\n  countries: [\r\n    {\r\n      name: string\r\n      languages: [{ name: string }]\r\n    },\r\n  ]\r\n}\r\n\r\ninterface ContinentsData {\r\n  continents: Continents[]\r\n}\r\n\r\nconst GET_COUNTRIES = gql`\r\n  query continents {\r\n    continents {\r\n      name\r\n      countries {\r\n        name\r\n        languages {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nconst Countries: React.FC = () => {\r\n  const { data, loading, error } = useQuery<ContinentsData>(GET_COUNTRIES)\r\n\r\n  if (loading) return <Spiner />\r\n  if (error) return <p style={{ color: 'red' }}>Sorry, it is not possible to receive data now, maybe try again later.</p>\r\n\r\n  return (\r\n    <Div>\r\n      {data && data.continents.length > 0 && data.continents.map((continent: { name: string; countries: any[] }) =>\r\n        <List key={continent.name} data={continent.name} clase={'tree'}>\r\n          {continent.countries.map(country =>\r\n            <List key={country.name} data={country.name} clase={'firstList'}>\r\n              {country.languages.map((language: { name: string }) =>\r\n                <List key={language.name} data={language.name} clase={'secondList'} />\r\n              )}\r\n            </List>\r\n          )}\r\n        </List>\r\n      )}\r\n    </Div >\r\n  )\r\n}\r\nexport default Countries\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// first variant---\r\n\r\n/*< Div >\r\n{ data && data.continents.length > 0 && data.continents.map((continent: { name: string; countries: any[] }) =>\r\n  <ul key={continent.name} className=\"tree\">\r\n    <li><span onClick={e => useCollapseList.openTree(e, '.firstList')}>{continent.name}</span>\r\n\r\n      {continent.countries.map(country =>\r\n        <ul key={country.name} className={'firstList ' + listState}>\r\n          <li><span onClick={e => useCollapseList.openTree(e, '.secondList')}>{country.name}</span>\r\n\r\n            {country.languages.map((language: { name: string }) =>\r\n              <ul key={language.name} className={listState + ' secondList'}>\r\n                <li><span onClick={e => useCollapseList.closeTree(e, '.tree', '.firstList, .secondList', setListState)}>{language.name}</span></li>\r\n              </ul>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </li>\r\n  </ul>\r\n)}\r\n  </Div >*/","import React from 'react'\r\nimport './Main.styles.scss'\r\nimport Countries from 'components/Countries'\r\n\r\nconst Main: React.FC = () => {\r\n  return (\r\n    <main className=\"section\">\r\n      <Countries />\r\n    </main>\r\n  )\r\n}\r\nexport default Main\r\n"],"sourceRoot":""}